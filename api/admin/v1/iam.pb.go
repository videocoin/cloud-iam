// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/admin/v1/iam.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublicKey struct {
	PublicKeyData        []byte   `protobuf:"bytes,1,opt,name=public_key_data,json=publicKeyData,proto3" json:"public_key_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a119a051997113, []int{0}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetPublicKeyData() []byte {
	if m != nil {
		return m.PublicKeyData
	}
	return nil
}

type GetUserPublicKeyRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeyId                string   `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserPublicKeyRequest) Reset()         { *m = GetUserPublicKeyRequest{} }
func (m *GetUserPublicKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserPublicKeyRequest) ProtoMessage()    {}
func (*GetUserPublicKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a119a051997113, []int{1}
}

func (m *GetUserPublicKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserPublicKeyRequest.Unmarshal(m, b)
}
func (m *GetUserPublicKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserPublicKeyRequest.Marshal(b, m, deterministic)
}
func (m *GetUserPublicKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserPublicKeyRequest.Merge(m, src)
}
func (m *GetUserPublicKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserPublicKeyRequest.Size(m)
}
func (m *GetUserPublicKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserPublicKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserPublicKeyRequest proto.InternalMessageInfo

func (m *GetUserPublicKeyRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetUserPublicKeyRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func init() {
	proto.RegisterType((*PublicKey)(nil), "videocoin.iam.admin.v1.PublicKey")
	proto.RegisterType((*GetUserPublicKeyRequest)(nil), "videocoin.iam.admin.v1.GetUserPublicKeyRequest")
}

func init() { proto.RegisterFile("api/admin/v1/iam.proto", fileDescriptor_f1a119a051997113) }

var fileDescriptor_f1a119a051997113 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0x2c, 0xc8, 0xd4,
	0x4f, 0x4c, 0xc9, 0xcd, 0xcc, 0xd3, 0x2f, 0x33, 0xd4, 0xcf, 0x4c, 0xcc, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x2b, 0xcb, 0x4c, 0x49, 0xcd, 0x4f, 0xce, 0xcf, 0xcc, 0xd3, 0x03, 0x09,
	0x82, 0x55, 0xe8, 0x95, 0x19, 0x4a, 0xc9, 0xa7, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0xb4,
	0xa5, 0x65, 0xa6, 0xe6, 0xa4, 0xc4, 0x27, 0xa5, 0x66, 0x24, 0x96, 0x65, 0xe6, 0x17, 0x41, 0x34,
	0x2a, 0x19, 0x73, 0x71, 0x06, 0x94, 0x26, 0xe5, 0x64, 0x26, 0x7b, 0xa7, 0x56, 0x0a, 0xa9, 0x71,
	0xf1, 0x17, 0x80, 0x39, 0xf1, 0xd9, 0xa9, 0x95, 0xf1, 0x29, 0x89, 0x25, 0x89, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x3c, 0x41, 0xbc, 0x05, 0x30, 0x35, 0x2e, 0x89, 0x25, 0x89, 0x4a, 0xc1, 0x5c, 0xe2,
	0xee, 0xa9, 0x25, 0xa1, 0xc5, 0xa9, 0x45, 0x70, 0xbd, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0x32, 0x5c, 0xec, 0xa5, 0xc5, 0xa9, 0x45, 0xf1, 0x99, 0x29, 0x60, 0xad, 0x9c, 0x4e, 0xcc,
	0x0f, 0x1c, 0x99, 0x82, 0xd8, 0x40, 0x62, 0x9e, 0x29, 0x42, 0x52, 0x5c, 0x6c, 0x20, 0x93, 0x33,
	0x53, 0x24, 0x98, 0x10, 0x92, 0xac, 0xd9, 0xa9, 0x95, 0x9e, 0x29, 0x46, 0xf9, 0x5c, 0xcc, 0x9e,
	0x8e, 0xbe, 0x42, 0x19, 0x5c, 0x02, 0xe8, 0x66, 0x0b, 0xe9, 0xeb, 0x61, 0xf7, 0x9e, 0x1e, 0x0e,
	0x57, 0x48, 0x29, 0xe2, 0xd2, 0x00, 0x57, 0xa9, 0xc4, 0xe0, 0xc4, 0x12, 0xc5, 0x54, 0x66, 0x98,
	0xc4, 0x06, 0x0e, 0x07, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x88, 0x0c, 0x07, 0x5a,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IAMClient is the client API for IAM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IAMClient interface {
	GetUserPublicKey(ctx context.Context, in *GetUserPublicKeyRequest, opts ...grpc.CallOption) (*PublicKey, error)
}

type iAMClient struct {
	cc grpc.ClientConnInterface
}

func NewIAMClient(cc grpc.ClientConnInterface) IAMClient {
	return &iAMClient{cc}
}

func (c *iAMClient) GetUserPublicKey(ctx context.Context, in *GetUserPublicKeyRequest, opts ...grpc.CallOption) (*PublicKey, error) {
	out := new(PublicKey)
	err := c.cc.Invoke(ctx, "/videocoin.iam.admin.v1.IAM/GetUserPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IAMServer is the server API for IAM service.
type IAMServer interface {
	GetUserPublicKey(context.Context, *GetUserPublicKeyRequest) (*PublicKey, error)
}

// UnimplementedIAMServer can be embedded to have forward compatible implementations.
type UnimplementedIAMServer struct {
}

func (*UnimplementedIAMServer) GetUserPublicKey(ctx context.Context, req *GetUserPublicKeyRequest) (*PublicKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPublicKey not implemented")
}

func RegisterIAMServer(s *grpc.Server, srv IAMServer) {
	s.RegisterService(&_IAM_serviceDesc, srv)
}

func _IAM_GetUserPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserPublicKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).GetUserPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/videocoin.iam.admin.v1.IAM/GetUserPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).GetUserPublicKey(ctx, req.(*GetUserPublicKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IAM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "videocoin.iam.admin.v1.IAM",
	HandlerType: (*IAMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserPublicKey",
			Handler:    _IAM_GetUserPublicKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/admin/v1/iam.proto",
}

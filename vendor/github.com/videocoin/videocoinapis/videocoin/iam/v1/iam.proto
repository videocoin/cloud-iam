syntax = "proto3";

package videocoin.iam.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";

option go_package = "v1";

service IAM {
  option (google.api.default_host) = "iam.videocoin.network";
  option (google.api.oauth_scopes) =
      "https://www.videocoin.network/auth/cloud-platform";

  // Creates a [Key][cloud.api.iam.v1.Key] and returns it.
  rpc CreateKey(google.protobuf.Empty) returns (Key) {
    option (google.api.http) = {
      post : "/v1/keys"
    };
  }

  // Lists [Keys][cloud.api.iam.v1.Key].
  rpc ListKeys(ListKeysRequest) returns (ListKeysResponse) {
    option (google.api.http) = {
      get : "/v1/keys"
    };
  }

  // Gets the [Key][cloud.api.iam.v1.Key] by key id.
  rpc GetKey(GetKeyRequest) returns (Key) {
    option (google.api.http) = {
      get : "/v1/keys/{key_id=*}"
    };
    option (google.api.method_signature) = "key_id";
  }

  // Deletes a [Key][cloud.api.iam.v1.Key] by key id..
  rpc DeleteKey(DeleteKeyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/keys/{key_id=*}"
    };
    option (google.api.method_signature) = "key_id";
  }
}

message Key {
  option (google.api.resource) = {
    type : "iam.videocoin.network/Key"
    pattern : "keys/{key}"
  };

  // The resource id.
  string id = 1;

  // The private key data. Only provided in `CreateServiceAccountKey`
  // responses. Make sure to keep the private key data secure because it
  // allows for the assertion of the service account identity.
  bytes private_key_data = 2;

  // The public key data. Only provided in `GetServiceAccountKey` responses.
  bytes public_key_data = 3;

  // The key can be used after this timestamp.
  google.protobuf.Timestamp valid_after_time = 4;

  // The key can be used before this timestamp.
  google.protobuf.Timestamp valid_before_time = 5;
}

// The keys list response.
message ListKeysRequest {
  // Optional limit on the number of roles to include in the response.
  int32 page_size = 1;

  // Optional pagination token returned in an earlier ListRolesResponse.
  string page_token = 2;
}

// The keys list response.
message ListKeysResponse { repeated Key keys = 1; }

// The key get by id request.
message GetKeyRequest {
  string key_id = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// The key delete request.
message DeleteKeyRequest {
  string key_id = 1 [ (google.api.field_behavior) = REQUIRED ];
}
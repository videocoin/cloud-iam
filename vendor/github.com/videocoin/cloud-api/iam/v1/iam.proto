syntax = "proto3";

package cloud.api.iam.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service IAM {
  option (google.api.default_host) = "iam.videocoin.network";
  option (google.api.oauth_scopes) =
      "https://www.videocoin.network/auth/cloud-platform";

  // Lists [ServiceAccounts][cloud.api.iam.v1.ServiceAccount] for a
  // project.
  rpc ListServiceAccounts(ListServiceAccountsRequest)
      returns (ListServiceAccountsResponse) {
    option (google.api.http) = {
      get : "/v1/serviceAccounts"
    };
  }

  // Gets a [ServiceAccount][cloud.api.iam.v1.ServiceAccount].
  rpc GetServiceAccount(GetServiceAccountRequest) returns (ServiceAccount) {
    option (google.api.http) = {
      get : "/v1/serviceAccounts/{email=*}"
    };
    option (google.api.method_signature) = "email";
  }

  // Creates a [ServiceAccount][cloud.api.iam.v1.ServiceAccount]
  rpc CreateServiceAccount(CreateServiceAccountRequest)
      returns (ServiceAccount) {
    option (google.api.http) = {
      post : "/v1/serviceAccounts"
      body : "*"
    };
    option (google.api.method_signature) = "account_id";
  }

  // Deletes a [ServiceAccount][cloud.api.iam.v1.ServiceAccount].
  rpc DeleteServiceAccount(DeleteServiceAccountRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/serviceAccounts/{email=*}"
    };
    option (google.api.method_signature) = "email";
  }

  // Lists [ServiceAccountKeys][cloud.api.iam.v1.ServiceAccountKey].
  rpc ListServiceAccountKeys(ListServiceAccountKeysRequest)
      returns (ListServiceAccountKeysResponse) {
    option (google.api.http) = {
      get : "/v1/serviceAccounts/{service_account_email=*}/keys"
    };
    option (google.api.method_signature) = "service_account_email";
  }

  // Gets the [ServiceAccountKey][cloud.api.iam.v1.ServiceAccountKey]
  // by key id.
  rpc GetServiceAccountKey(GetServiceAccountKeyRequest)
      returns (ServiceAccountKey) {
    option (google.api.http) = {
      get : "/v1/serviceAccounts/{service_account_email=*}/keys/{key_id=*}"
    };
    option (google.api.method_signature) = "service_account_email,key_id";
  }

  // Creates a [ServiceAccountKey][cloud.api.iam.v1.ServiceAccountKey]
  // and returns it.
  rpc CreateServiceAccountKey(CreateServiceAccountKeyRequest)
      returns (ServiceAccountKey) {
    option (google.api.http) = {
      post : "/v1/serviceAccounts/{service_account_email=*}/keys"
      body : "*"
    };
    option (google.api.method_signature) = "service_account_email";
  }

  // Deletes a [ServiceAccountKey][cloud.api.iam.v1.ServiceAccountKey].
  rpc DeleteServiceAccountKey(DeleteServiceAccountKeyRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/serviceAccounts/{service_account_email=*}/keys/{key_id=*}"
    };
    option (google.api.method_signature) = "service_account_email,key_id";
  }

  rpc CreateRoleBinding(RoleBinding) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/rolebindings"
      body : "*"
    };
    option (google.api.method_signature) = "role_name,user_id";
  }

  rpc DeleteRoleBinding(RoleBinding) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/rolebindings"
      body : "*"
    };
    option (google.api.method_signature) = "role_name,user_id";
  }

  rpc ListRoleBindings(ListRoleBindingsRequest)
      returns (ListRoleBindingsResponse) {
    option (google.api.http) = {
      get : "/rolebindings"
      body : "*"
    };
    option (google.api.method_signature) = "user_id";
  }

  // Lists the Roles defined on a resource.
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get : "/v1/roles"
    };
  }

  // Gets a Role definition.
  rpc GetRole(GetRoleRequest) returns (Role) {
    option (google.api.http) = {
      get : "/v1/roles/{name=*}"
    };
  }
}

// A service account in the Identity and Access Management API.
message ServiceAccount {
  option (google.api.resource) = {
    type : "iam.videocoin.network/ServiceAccount"
    pattern : "serviceAccounts/{email}"
  };

  // @OutputOnly The email address of the service account.
  string email = 1;

  // @OutputOnly The unique and stable id of the service account.
  string unique_id = 2;

  // Optional. A user-specified name for the service account.
  // Must be less than or equal to 100 UTF-8 bytes.
  string display_name = 3;
}

// The service account list request.
message ListServiceAccountsRequest {
  // Optional limit on the number of service accounts to include in the
  // response. Further accounts can subsequently be obtained by including the
  // [ListServiceAccountsResponse.next_page_token][cloud.api.iam.v1.ListServiceAccountsResponse.next_page_token]
  // in a subsequent request.
  int32 page_size = 2;

  // Optional pagination token returned in an earlier
  // [ListServiceAccountsResponse.next_page_token][cloud.api.iam.v1.ListServiceAccountsResponse.next_page_token].
  string page_token = 3;
}

// The service account list response.
message ListServiceAccountsResponse {
  // The list of matching service accounts.
  repeated ServiceAccount accounts = 1;

  // To retrieve the next page of results, set
  // [ListServiceAccountsRequest.page_token][cloud.api.iam.v1.ListServiceAccountsRequest.page_token]
  // to this value.
  string next_page_token = 2;
}

// The service account get request.
message GetServiceAccountRequest {
  // Required. The service account email.
  string email = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account create request.
message CreateServiceAccountRequest {
  // Required. The account id that is used to generate the service account
  // email address and a stable unique id. It is unique within a project,
  // must be 6-30 characters long, and match the regular expression
  // `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
  string account_id = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account delete request.
message DeleteServiceAccountRequest {
  // Required. The service account email.
  string email = 1 [ (google.api.field_behavior) = REQUIRED ];
}

message ServiceAccountKey {
  option (google.api.resource) = {
    type : "iam.videocoin.network/Key"
    pattern : "serviceAccounts/{service_account}/keys/{key}"
  };

  // The resource id.
  string id = 1;

  // The private key data. Only provided in `GetServiceAccountKey`
  // responses. Make sure to keep the private key data secure because it
  // allows for the assertion of the service account identity.
  bytes private_key_data = 2;

  // The public key data. Only provided in `GetServiceAccountKey` responses.
  bytes public_key_data = 3;

  // The key can be used after this timestamp.
  google.protobuf.Timestamp valid_after_time = 4;

  // The key can be used before this timestamp.
  // For system-managed key pairs, this timestamp is the end time for the
  // private key signing operation. The public key could still be used
  // for verification for a few hours after this time.
  google.protobuf.Timestamp valid_before_time = 5;
}

// The service account keys list request.
message ListServiceAccountKeysRequest {
  // Required. The service account email.
  string service_account_email = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account keys list response.
message ListServiceAccountKeysResponse {
  // The public keys for the service account.
  repeated ServiceAccountKey keys = 1;
}

// Supported public key output formats.
enum ServiceAccountPublicKeyType {
  // Unspecified. Returns nothing here.
  TYPE_NONE = 0;

  // X509 PEM format.
  TYPE_X509_PEM_FILE = 1;

  // Raw public key.
  TYPE_RAW_PUBLIC_KEY = 2;
}

// The service account key get by id request.
message GetServiceAccountKeyRequest {
  // The service account email
  string service_account_email = 1;

  // Required. The key id.
  string key_id = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account key create request.
message CreateServiceAccountKeyRequest {
  // Required. The service account name.
  string service_account_email = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account key delete request.
message DeleteServiceAccountKeyRequest {
  // The service account email.
  string service_account_email = 1;

  // Required. The service account email.
  string key_id = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// A role in the Identity and Access Management API.
message Role {
  // The name of the role.
  string name = 1;

  // Optional. A human-readable title for the role.  Typically this
  // is limited to 100 UTF-8 bytes.
  string title = 2;

  // Optional. A human-readable description for the role.
  string description = 3;

  // The names of the permissions this role grants when bound in an IAM policy.
  repeated string included_permissions = 4;
}

// A view for Role objects.
enum RoleView {
  // Omits the `included_permissions` field.
  // This is the default value.
  BASIC = 0;

  // Returns all fields.
  FULL = 1;
}

// The request to get all roles defined under a resource.
message ListRolesRequest {
  // Optional limit on the number of roles to include in the response.
  int32 page_size = 1;

  // Optional pagination token returned in an earlier ListRolesResponse.
  string page_token = 2;

  // Optional view for the returned Role objects. When `FULL` is specified,
  // the `includedPermissions` field is returned, which includes a list of all
  // permissions in the role. The default value is `BASIC`, which does not
  // return the `includedPermissions` field.
  RoleView view = 3;
}

// The response containing the roles defined under a resource.
message ListRolesResponse {
  // The list of predefined roles.
  repeated Role roles = 1;

  // To retrieve the next page of results, set
  // `ListRolesRequest.page_token` to this value.
  string next_page_token = 2;
}

message GetRoleRequest {
  // The name of the role.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "*"
  ];
}

// A permission which can be included by a role.
message Permission {
  // The name of this Permission.
  string name = 1;

  // The title of this Permission.
  string title = 2;

  // A brief description of what this Permission is used for.
  string description = 3;
}

message RoleBinding {
  // The name of the role.
  string role_name = 1 [ (google.api.field_behavior) = REQUIRED ];

  // The user id.
  string user_id = 2 [ (google.api.field_behavior) = REQUIRED ];
}

message ListRoleBindingsRequest {
  // Optional
  string user_id = 1;

  // Optional pagination token returned in an earlier ListRoleBindingsRequest.
  string page_token = 2;
}

message ListRoleBindingsResponse {
  // The list of role bindings.
  repeated RoleBinding bindings = 1;
}
---
apiVersion: v1
kind: Secret
metadata:
  name: iam
  namespace: iam
  labels:
    app: iam
type: Opaque
data:
  fullDbUri: "bXlzcWw6Ly90ZXN0OjEyMzQ1Njc4OUB0Y3AoMTAuMjM1LjAuMzozMzA2KS90ZXN0P2NoYXJzZXQ9dXRmOCZwYXJzZVRpbWU9VHJ1ZQ==" #mysql://test:123456789@tcp(10.235.0.3:3306)/test?charset=utf8&parseTime=True
  dbUri: "dGVzdDoxMjM0NTY3ODlAdGNwKDEwLjIzNS4wLjMpL3Rlc3Q/Y2hhcnNldD11dGY4JnBhcnNlVGltZT1UcnVl" #test:123456789@tcp(10.235.0.3)/test?charset=utf8&parseTime=True
  authTokenSecret: "dGVzdA==" #test

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam
  namespace: iam
  labels:
    app: iam
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iam
      version: v1
  template:
    metadata:
      labels:
        app: iam
        version: v1
      annotations:
        sidecar.istio.io/userVolume: '[{"name":"descriptor","configMap":{"name":"proto-descriptor","items":[{"key":"iam.descriptor","path":"iam.descriptor"}]}}]'
        sidecar.istio.io/userVolumeMount: '[{"name":"descriptor","mountPath":"/etc/envoy"}]'
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: iam
          image: registry.dev.videocoin.net/iam/iam:v0.1.0-dev.19
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 5000
          livenessProbe:
            exec:
              command: ["grpc_health_probe", "-addr=:5000"]
            initialDelaySeconds: 5
          readinessProbe:
            exec:
              command: ["grpc_health_probe", "-addr=:5000"]
            initialDelaySeconds: 10
          env:
            - name: IAM_DBURI
              valueFrom:
                secretKeyRef:
                  name: iam
                  key: dbUri
            - name: IAM_AUTHTOKENSECRET
              valueFrom:
                secretKeyRef:
                  name: iam
                  key: authTokenSecret
            - name: GRPC_GO_LOG_SEVERITY_LEVEL
              value: info
            - name: GRPC_GO_LOG_VERBOSITY_LEVEL
              value: "99"
      volumes:
        - name: secrets
          secret:
            secretName: iam

---
apiVersion: v1
kind: Service
metadata:
  name: iam
  namespace: iam
  labels:
    app: iam
spec:
  ports:
    - name: grpc
      port: 5000
  selector:
    app: iam

---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: iam
  namespace: iam
  labels:
    app: iam
spec:
  filters:
    - filterConfig:
        print_options:
          add_whitespace: true
          always_print_enums_as_ints: false
          always_print_primitive_fields: true
          preserve_proto_field_names: false
        proto_descriptor: /etc/envoy/iam.descriptor
        services:
          - videocoin.iam.v1.IAM
      filterName: envoy.grpc_json_transcoder
      filterType: HTTP
      listenerMatch:
        portNumber: 5000
  workloadLabels:
    app: iam
#---
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: iam-db-migrate
#  namespace: iam
#  labels:
#    app: iam
#  annotations:
#    "sidecar.istio.io/inject": "false"
#"helm.sh/hook": post-install,pre-upgrade
#"helm.sh/hook-weight": "1"
#"helm.sh/hook-delete-policy": hook-succeeded
#spec:
#  template:
#    metadata:
#      name: db-migrate
#      labels:
#        app: iam
#    spec:
#      restartPolicy: Never
#      imagePullSecrets:
#        - name: regcred
#      containers:
#        - name: db-migrator
#          image: registry.dev.videocoin.net/iam/iam:v0.1.0-dev.19
#          command:
#            - "migrate"
#            - "-path"
#            - "/migrations"
#            - "-database"
#            - "$(DBURI)"
#            - "down"
#          env:
#            - name: DBURI
#              valueFrom:
#                secretKeyRef:
#                  name: iam
#                  key: fullDbUri
#      volumes:
#        - name: secrets
#          secret:
#            secretName: iam

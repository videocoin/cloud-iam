---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iam.fullname" . }}
  labels:
    {{- include "iam.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "iam.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "iam.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/iam:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args:
          - "-c"
          - ". /vault/secrets/iam.vars && IAM_DBURI=$IAM_DBURI IAM_AUTHTOKENSECRET=$IAM_AUTHTOKENSECRET iamd"
          ports:
            - name: grpc
              containerPort: 5000
          env:
          {{- with index .Values.ingress.hosts 0 }}
          - name: IAM_HOSTNAME
            value: {{ .host }}
          {{- end }}
          livenessProbe:
            exec:
              command: ["grpc_health_probe", "-addr=:5000"]
            initialDelaySeconds: 5
          readinessProbe:
            exec:
              command: ["grpc_health_probe", "-addr=:5000"]
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: vault-secrets
            mountPath: /vault/secrets
      initContainers:
      - name: vault-auth
        image: sethvargo/vault-kubernetes-authenticator:0.4.0
        env:
        - name: VAULT_ADDR
          value: https://vault.videocoin.net
        - name: VAULT_ROLE
          value: iam
        - name: VAULT_K8S_MOUNT_PATH
          value: {{ $.Values.vault.backend }}
        - name: TOKEN_DEST_PATH
          value: /var/run/secrets/vaultproject.io/.vault-token
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
      - name: consul-template
        image: hashicorp/consul-template:0.24.0-alpine
        args:
        - "-once"
        env:
        - name: VAULT_ADDR
          value: https://vault.videocoin.net
        - name: CT_LOCAL_CONFIG
          value: |
            vault {
              vault_agent_token_file = "/var/run/secrets/vaultproject.io/.vault-token"
              retry {
                backoff = "1s"
              }
            }

            template {
              contents = <<EOF
              {{`{{- with secret "`}}{{ $.Values.vault.paths.dbUri }}{{`" }}
              IAM_DBURI='{{ .Data.uri }}'
              {{- end }}`}}
              {{`{{- with secret "`}}{{ $.Values.vault.paths.authTokenSecret }}{{`" }}
              IAM_AUTHTOKENSECRET='{{ .Data.token }}'
              {{- end }}`}}
              EOF
              destination = "/vault/secrets/iam.vars"
              perms = 0500
            }
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
          readOnly: true
        - name: vault-secrets
          mountPath: /vault/secrets
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: vault-secrets
          emptyDir: {}
        - name: vault-token
          emptyDir: {
            medium: Memory
          }